#include <stdio.h>
#include <stdlib.h>

struct MONTOS{
    int anio;
    int bim;
    char tipo;
    float imp;
};

struct CONTRIB{
    int nroCont
    char tipo;
    int anio;
    int bim;
};

void cargarMonto(struct MONTOS[][6],int);
int validar(int,int);
int buscarImporte(struct MONTOS[][6],struct CONTRIB[91200],int);
int main(){

    int anioIn,cCon=0,i=0,j=0,pagosCont[6]={0},maxIndice,tipoEncontrado;
    float totalBim[6]={0},max,total=0;
    struct MONTOS mon[5][6],montosCarga;
    struct CONTRIB contAux[30], cont[30],contAnt;

    printf("Ingrese aï¿½o a utilizar.");
    anioIn=validar(2020,2022);

	FILE * arc;
    cargarMonto(mon,anioIn);
    
    arc=fopen("contribuyentes.dat","rb");
    fread(&contAux[cCon],sizeof(struct CONTRIB),1,arc);
    while(!feof(arc)){
    	
        cCon++;
        fread(&contAux[cCon],sizeof(struct CONTRIB),1,arc);
    }
    fclose(arc);

	i=0;
	j=0;
    while(i<cCon){
        if(contAux[i].anio==anioIn){
            cont[j]=contAux[i];
            j++;
        }
        i++;
    }
    j=0;
    i=0;
    printf("\nContribuyente\t\t\t\t\t\tBIMESTRES");
    printf("\n\t\t\t1\t\t2\t\t3\t\t4\t\t5\t\t6");
    while(i<cCon){
        contAnt=cont[i];
        printf("\n%d\t\t\t",contAnt.nroCont);
        while(i<cCon && contAnt.nroCont==cont[i].nroCont){
            pagosCont[cont[i].bim-1]=1;
            //punto 1
            tipoEncontrado=buscarImporte(mon,cont,i);
            total+=mon[tipoEncontrado][cont[i].bim-1].imp;
            //puinto 2
            totalBim[cont[i].bim-1]+=mon[tipoEncontrado][cont[i].bim-1].imp;
            i++;
        }
        for(j=0;j<6;j++){
            if(pagosCont[j]==0) printf("No pago\t\t");
            else{
                printf("Pago\t\t");
                pagosCont[j]=0;
            } 
        }
    }

    printf("\nEl total recaudado es: %g",total);
    for(i=0;i<6;i++){
        if(totalBim[i]>max || i==0){
            max=totalBim[i];
            maxIndice=i;
        }
    }
    printf("\nEl bimestre que mas recaudo es: %d",maxIndice+1);


getch();
}

void cargarMonto(struct MONTOS mon[][6],int anioIn){
    int cMon=0, i=0, flag=0,j=0,k=0;
    struct MONTOS montos[90];//6*5*3=90

    FILE * arc;
    arc=fopen("montos.dat","rb");
    fread(&montos[cMon],sizeof(struct MONTOS),1,arc);
    while(!feof(arc)){
        cMon++;
        fread(&montos[cMon],sizeof(struct MONTOS),1,arc);
    }
    fclose(arc);

    while(flag==0 && i<cMon){
        if(montos[i].anio==anioIn){
            for(j=0;j<5;j++){
            	printf("\n");
                for(k=0;k<6;k++){
                    mon[j][k]=montos[i];
                    printf("\n%d,%d,%c,%g",mon[j][k].anio,mon[j][k].bim,mon[j][k].tipo,mon[j][k].imp);
                    i++;
                }
            }
            flag=1;
        }else{
            i+=30;
        }
    n}
};

int validar(int min, int max){
    int num;
    do{
        scanf("%d",&num);
    }while(num<min && num>max);
    return num;
}

int buscarImporte(struct MONTOS monto[][6],struct CONTRIB cont[],int indice){
    int j=0, tipoEncontrado,flag=0;
    while(flag==0 && j<6){
        if(monto[j][0].tipo==cont[indice].tipo){
            tipoEncontrado=j;
            flag=1;
        }
        j++;
    }
    return tipoEncontrado;
}

